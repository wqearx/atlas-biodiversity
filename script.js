let animalsData = [];

// –ó–∞–≥—Ä—É–∂–∞–µ–º JSON —Å –∂–∏–≤–æ—Ç–Ω—ã–º–∏
fetch('animals.json')
  .then(response => response.json())
  .then(data => {
    animalsData = data;
    displayAnimals(animalsData); // –û—Ç–æ–±—Ä–∞–∑–∏–º –≤—Å–µ—Ö –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  })
  .catch(error => console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ JSON:', error));

// === –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –º–Ω–æ–≥–æ—Å–ª–æ–π–Ω—ã–π —Ç—É–º–∞–Ω üå´ ===
const canvas = document.getElementById('fireflies');
const ctx = canvas.getContext('2d');
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

let fogLayers = [];
let mouse = { x: canvas.width/2, y: canvas.height/2 };

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–ª–æ–µ–≤: [–∫–æ–ª-–≤–æ, –º–∞–∫—Å —Ä–∞–¥–∏—É—Å, —Å–∫–æ—Ä–æ—Å—Ç—å]
const layerSettings = [
  { count: 10, radius: 400, speed: 0.02 },  // –ø–µ—Ä–µ–¥–Ω–∏–π –ø–ª–∞–Ω
  { count: 15, radius: 250, speed: 0.03 },  // —Å—Ä–µ–¥–Ω–∏–π
  { count: 20, radius: 150, speed: 0.04 }   // –∑–∞–¥–Ω–∏–π –ø–ª–∞–Ω
];

class Fog {
  constructor(radius, speed) {
    this.x = Math.random() * canvas.width;
    this.y = Math.random() * canvas.height;
    this.radius = Math.random() * radius/2 + radius/2;
    this.speedX = (Math.random() * speed - speed/2);
    this.speedY = (Math.random() * speed - speed/2);
    this.alpha = Math.random() * 0.15 + 0.05;
    this.alphaDirection = Math.random() > 0.5 ? 1 : -1;
  }

  update() {
    this.x += this.speedX;
    this.y += this.speedY;

    // –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –º—ã—à—å—é
    const dx = this.x - mouse.x;
    const dy = this.y - mouse.y;
    const dist = Math.sqrt(dx*dx + dy*dy);
    if(dist < 250){
      const force = (250 - dist)/250 * 1.5;
      this.x += dx/dist * force;
      this.y += dy/dist * force;
    }

    // —Ü–∏–∫–ª –ø–æ —ç–∫—Ä–∞–Ω—É
    if (this.x > canvas.width + this.radius) this.x = -this.radius;
    if (this.x < -this.radius) this.x = canvas.width + this.radius;
    if (this.y > canvas.height + this.radius) this.y = -this.radius;
    if (this.y < -this.radius) this.y = canvas.height + this.radius;

    // –º—è–≥–∫–æ–µ –º–µ—Ä—Ü–∞–Ω–∏–µ
    this.alpha += 0.001 * this.alphaDirection;
    if (this.alpha < 0.03 || this.alpha > 0.2) this.alphaDirection *= -1;
  }

  draw() {
    const gradient = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.radius);
    gradient.addColorStop(0, `rgba(255,255,255,${this.alpha})`);
    gradient.addColorStop(1, 'rgba(255,255,255,0)');
    ctx.fillStyle = gradient;
    ctx.beginPath();
    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);
    ctx.fill();
  }
}

function initFog() {
  fogLayers = [];
  layerSettings.forEach(layer => {
    let arr = [];
    for (let i = 0; i < layer.count; i++) arr.push(new Fog(layer.radius, layer.speed));
    fogLayers.push(arr);
  });
}

function animate() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  fogLayers.forEach(layer => {
    layer.forEach(f => { f.update(); f.draw(); });
  });
  requestAnimationFrame(animate);
}

// –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –º—ã—à—å
window.addEventListener('mousemove', e => {
  mouse.x = e.clientX;
  mouse.y = e.clientY;
});

window.addEventListener('resize', () => {
  canvas.width = window.innerWidth;
  canvas.height = window.innerHeight;
  initFog();
});

initFog();
animate();

// === –ü–ª–∞–≤–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ ===
const observer = new IntersectionObserver(entries => {
  entries.forEach(entry => {
    if (entry.isIntersecting) {
      entry.target.classList.add('visible');
    }
  });
}, { threshold: 0.2 });

document.querySelectorAll('.animal-card').forEach(card => observer.observe(card));

// === –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ ===
document.addEventListener("DOMContentLoaded", () => {
  const modal = document.getElementById("modal");
  const btnInfo = document.querySelector(".btn.info");
  const spanClose = document.querySelector(".modal .close");

  if(btnInfo){
    // –æ—Ç–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    btnInfo.addEventListener("click", () => {
      modal.style.display = "block";
    });
  }

  // –∑–∞–∫—Ä—ã—Ç—å –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫—Ä–µ—Å—Ç–∏–∫
  spanClose.addEventListener("click", () => {
    modal.style.display = "none";
  });

  // –∑–∞–∫—Ä—ã—Ç—å –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –æ–∫–Ω–∞
  window.addEventListener("click", (event) => {
    if (event.target == modal) {
      modal.style.display = "none";
    }
  });
});
document.addEventListener("DOMContentLoaded", () => {
  const modal = document.getElementById("modal");
  const modalTitle = document.getElementById("modal-title");
  const modalImage = document.getElementById("modal-image");
  const modalDesc = document.getElementById("modal-description");
  const closeBtn = modal.querySelector(".close");
  const animalsData = [
  { name: "–õ–µ–≤", biome: "forest", img: "images/1-315.jpg", description: "–¶–∞—Ä—å —Å–∞–≤–∞–Ω–Ω—ã –∏ —Å–∏–º–≤–æ–ª —Å–∏–ª—ã." },
  { name: "–°–ª–æ–Ω", biome: "forest", img: "images/elephant_03.jpg", description: "–°–∞–º–æ–µ –∫—Ä—É–ø–Ω–æ–µ —Å—É—Ö–æ–ø—É—Ç–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ." },
  { name: "–¢–∏–≥—Ä", biome: "forest", img: "images/istockphoto-1420676204-612x612.jpg", description: "–ú–æ—â–Ω—ã–π —Ö–∏—â–Ω–∏–∫ –∏–∑ –¥–∂—É–Ω–≥–ª–µ–π –ê–∑–∏–∏." },
  { name: "–î–µ–ª—å—Ñ–∏–Ω", biome: "ocean", img: "images/150218144801_dolphines_happy_624x351_thinkstock.jpg", description: "–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ —É–º–Ω—ã–π –æ–±–∏—Ç–∞—Ç–µ–ª—å –º–æ—Ä–µ–π." },
  { name: "–ß–µ—Ä–µ–ø–∞—Ö–∞", biome: "ocean", img: "images/Images_SW_illustration_16.jpg", description: "–°–ø–æ–∫–æ–π–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ, –ø—É—Ç–µ—à–µ—Å—Ç–≤—É—é—â–µ–µ –ø–æ –æ–∫–µ–∞–Ω–∞–º." },
  { name: "–û—Ä–µ–ª", biome: "sky", img: "images/golden-eagle-flying.jpg", description: "–ì–æ—Ä–¥—ã–π —Ö–∏—â–Ω–∏–∫, –ø–∞—Ä—è—â–∏–π –Ω–∞–¥ –≥–æ—Ä–∞–º–∏." },
  { name: "–ü–æ–ø—É–≥–∞–π", biome: "sky", img: "images/1621053325_30-oir_mobi-p-popugai-arlekin-zhivotnie-krasivo-foto-31.jpg", description: "–Ø—Ä–∫–∏–π –±–æ–ª—Ç—É–Ω —Ç—Ä–æ–ø–∏—á–µ—Å–∫–∏—Ö –ª–µ—Å–æ–≤." },
  { name: "–ö–æ–±—Ä–∞", biome: "desert", img: "images/d4fef1c857d595ebe6ce86fa0d93497f.jpg", description: "–û–ø–∞—Å–Ω–∞—è –∏ –≥—Ä–∞—Ü–∏–æ–∑–Ω–∞—è –æ—Ö–æ—Ç–Ω–∏—Ü–∞, —Å–∏–º–≤–æ–ª —Å–∏–ª—ã –∏ –º—É–¥—Ä–æ—Å—Ç–∏." },
  { name: "–ò–≥—É–∞–Ω–∞", biome: "desert", img: "images/794tflkt5qs3fno25ck9n91un17v5t7r.jpg", description: "–ë–µ–∑–º—è—Ç–µ–∂–Ω–∞—è —è—â–µ—Ä–∏—Ü–∞, –æ–±–æ–∂–∞—é—â–∞—è —Å–æ–ª–Ω–µ—á–Ω—ã–µ –ª—É—á–∏." }
];


  // —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö
  const animalDetails = {
    "–ñ–∏—Ä–∞—Ñ": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Giraffa camelopardalis - –≤—ã—Å–æ–∫–æ–µ —Ç—Ä–∞–≤–æ—è–¥–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ. –ü–∏—Ç–∞–µ—Ç—Å—è –ª–∏—Å—Ç—å—è–º–∏ –¥–µ—Ä–µ–≤—å–µ–≤, –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ –∞–∫–∞—Ü–∏–∏. –î–æ—Å—Ç–∏–≥–∞–µ—Ç –≤—ã—Å–æ–∫–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —É–±–µ–∂–∞—Ç—å –æ—Ç —Ö–∏—â–Ω–∏–∫–æ–≤.",
    "–í–æ–ª–∫": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Canis lupus - —Ö–∏—â–Ω–∏–∫ —Å–µ–º–µ–π—Å—Ç–≤–∞ –ø—Å–æ–≤—ã—Ö. –°–æ—Ü–∏–∞–ª—å–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ, –∂–∏–≤—ë—Ç —Å—Ç–∞—è–º–∏ —Å –∏–µ—Ä–∞—Ä—Ö–∏–µ–π. –†–∞—Ü–∏–æ–Ω —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –∫–æ–ø—ã—Ç–Ω—ã—Ö –∏ –º–µ–ª–∫–∏—Ö –º–ª–µ–∫–æ–ø–∏—Ç–∞—é—â–∏—Ö.",
    "–õ–µ–≤": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Panthera leo - –∫—Ä—É–ø–Ω—ã–π —Ö–∏—â–Ω–∏–∫ –ê—Ñ—Ä–∏–∫–∏. –ñ–∏–≤—ë—Ç —Å—Ç–∞—è–º–∏ (–ø—Ä–∞–π–¥–∞–º–∏), –≤–µ—Ä—à–∏–Ω–∞ –ø–∏—â–µ–≤–æ–π —Ü–µ–ø–∏ —Å–∞–≤–∞–Ω–Ω—ã. –ü–∏—Ç–∞–µ—Ç—Å—è –∫–æ–ø—ã—Ç–Ω—ã–º–∏ –∂–∏–≤–æ—Ç–Ω—ã–º–∏.",
    "–°–ª–æ–Ω": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Loxodonta africana - —Å–∞–º–æ–µ –∫—Ä—É–ø–Ω–æ–µ —Å—É—Ö–æ–ø—É—Ç–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ. –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –≥—Ä—É–ø–ø—ã, –≤—ã—Å–æ–∫–∏–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç, –ø–∏—Ç–∞–µ—Ç—Å—è –ª–∏—Å—Ç—å—è–º–∏, –∫–æ—Ä–æ–π –∏ —Ç—Ä–∞–≤–æ–π.",
    "–¢–∏–≥—Ä": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Panthera tigris - –∫—Ä—É–ø–Ω—ã–π —Ö–∏—â–Ω–∏–∫ –ê–∑–∏–∏. –í–µ–¥—ë—Ç –æ–¥–∏–Ω–æ—á–Ω—ã–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏, –æ—Ö–æ—Ç–∏—Ç—Å—è –Ω–∞ –∫–æ–ø—ã—Ç–Ω—ã—Ö –∏ –º–µ–ª–∫–∏—Ö –º–ª–µ–∫–æ–ø–∏—Ç–∞—é—â–∏—Ö.",
    "–ü–∞–Ω–¥–∞": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Ailuropoda melanoleuca - –º–µ–¥–≤–µ–¥—å, –æ–±–∏—Ç–∞—é—â–∏–π –≤ –≥–æ—Ä–∞—Ö –ö–∏—Ç–∞—è. –ü–∏—Ç–∞–µ—Ç—Å—è –≥–ª–∞–≤–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –±–∞–º–±—É–∫–æ–º. –£—è–∑–≤–∏–º—ã–π –≤–∏–¥.",
    "–ú–µ–¥–≤–µ–¥—å": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Ursus arctos - –∫—Ä—É–ø–Ω—ã–π —Ö–∏—â–Ω–∏–∫, –≤—Å–µ—è–¥–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ. –ê–∫—Ç–∏–≤–µ–Ω –∫–∞–∫ –¥–Ω—ë–º, —Ç–∞–∫ –∏ –Ω–æ—á—å—é. –ü–∏—Ç–∞–µ—Ç—Å—è —Ä—ã–±–æ–π, —è–≥–æ–¥–∞–º–∏ –∏ –º–µ–ª–∫–∏–º–∏ –º–ª–µ–∫–æ–ø–∏—Ç–∞—é—â–∏–º–∏.",
    "–û–ª–µ–Ω—å": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Cervidae - —Ç—Ä–∞–≤–æ—è–¥–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ —Å —Ä–∞–∑–≤–µ—Ç–≤–ª—ë–Ω–Ω—ã–º–∏ —Ä–æ–≥–∞–º–∏. –ñ–∏–≤—ë—Ç –≤ –ª–µ—Å–∞—Ö –∏ —Å—Ç–µ–ø—è—Ö, –ø–∏—Ç–∞–µ—Ç—Å—è —Ç—Ä–∞–≤–æ–π, –ª–∏—Å—Ç—å—è–º–∏ –∏ —è–≥–æ–¥–∞–º–∏.",
    "–ü–∞–≤–ª–∏–Ω": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Pavo cristatus - –ø—Ç–∏—Ü–∞ —Å–µ–º–µ–π—Å—Ç–≤–∞ —Ñ–∞–∑–∞–Ω–æ–≤—ã—Ö. –°–∞–º—Ü—ã –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—Ç –¥–ª–∏–Ω–Ω—ã–π –∫—Ä–∞—Å–æ—á–Ω—ã–π —Ö–≤–æ—Å—Ç –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è —Å–∞–º–æ–∫.",
    "–î–µ–ª—å—Ñ–∏–Ω": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Delphinus delphis - —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –º–æ—Ä—Å–∫–∏–µ –º–ª–µ–∫–æ–ø–∏—Ç–∞—é—â–∏–µ. –ò—Å–ø–æ–ª—å–∑—É—é—Ç —ç—Ö–æ–ª–æ–∫–∞—Ü–∏—é, –∂–∏–≤—É—Ç –≤ —Å—Ç–∞—è—Ö, –æ–±–ª–∞–¥–∞—é—Ç —Å–ª–æ–∂–Ω—ã–º —Å–æ—Ü–∏–∞–ª—å–Ω—ã–º –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º.",
    "–ú–æ—Ä—Å–∫–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Cheloniidae - –º–æ—Ä—Å–∫–æ–µ —Ä–µ–ø—Ç–∏–ª—å–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ. –ü–∏—Ç–∞–µ—Ç—Å—è –≤–æ–¥–æ—Ä–æ—Å–ª—è–º–∏ –∏ –º–µ–ª–∫–æ–π —Ä—ã–±–æ–π, —Å–ø–æ—Å–æ–±–Ω–æ –∫ –¥–æ–ª–≥–∏–º –º–∏–≥—Ä–∞—Ü–∏—è–º.",
    "–ê–∫—É–ª–∞": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Carcharhinus spp. - —Ö–∏—â–Ω–∞—è —Ä—ã–±–∞. –û–±–ª–∞–¥–∞–µ—Ç –æ—Å—Ç—Ä—ã–º –æ–±–æ–Ω—è–Ω–∏–µ–º –∏ –∑—Ä–µ–Ω–∏–µ–º, —Ä–µ–≥—É–ª–∏—Ä—É–µ—Ç —á–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç—å –ø–æ–ø—É–ª—è—Ü–∏–π –º–æ—Ä—Å–∫–∏—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö.",
    "–û—Å—å–º–∏–Ω–æ–≥": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Octopus vulgaris - –≤—ã—Å–æ–∫–æ—Ä–∞–∑–≤–∏—Ç—ã–π –º–æ–ª–ª—é—Å–∫, —É–º–µ–µ—Ç –º–∞—Å–∫–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã. –ü–∏—Ç–∞–µ—Ç—Å—è –∫—Ä–∞–±–∞–º–∏ –∏ —Ä—ã–±–æ–π.",
    "–ú–µ–¥—É–∑–∞": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Aurelia aurita - –ø—Ä–æ–∑—Ä–∞—á–Ω–æ–µ –º–æ—Ä—Å–∫–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ. –ü–∏—Ç–∞–µ—Ç—Å—è –ø–ª–∞–Ω–∫—Ç–æ–Ω–æ–º, —Å–ø–æ—Å–æ–±–Ω–æ –∫ –±–∏–æ–ª—é–º–∏–Ω–µ—Å—Ü–µ–Ω—Ü–∏–∏.",
    "–ú–æ—Ä—Å–∫–æ–π –∫–æ–Ω—ë–∫": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Hippocampus spp. - –Ω–µ–±–æ–ª—å—à–∞—è –º–æ—Ä—Å–∫–∞—è —Ä—ã–±–∞. –°–∞–º—Ü—ã –≤—ã–Ω–∞—à–∏–≤–∞—é—Ç –∏–∫—Ä—É, –ø–∏—Ç–∞–µ—Ç—Å—è –ø–ª–∞–Ω–∫—Ç–æ–Ω–æ–º.",
    "–†—ã–±–∞-–∫–ª–æ—É–Ω": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Amphiprioninae - —è—Ä–∫–∞—è —Ä—ã–±–∞, –∂–∏–≤—ë—Ç —Å—Ä–µ–¥–∏ –∞–Ω–µ–º–æ–Ω–æ–≤. –¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∞–ª—å–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ, –ø–∏—Ç–∞–µ—Ç—Å—è –º–µ–ª–∫–∏–º–∏ –±–µ—Å–ø–æ–∑–≤–æ–Ω–æ—á–Ω—ã–º–∏.",
    "–ö–∏—Ç": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Balaenoptera musculus - –∫—Ä—É–ø–Ω–µ–π—à–µ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ –Ω–∞ –ø–ª–∞–Ω–µ—Ç–µ. –§–∏–ª—å—Ç—Ä—É—é—â–∏–π –∫–æ—Ä–º ‚Äî –ø–ª–∞–Ω–∫—Ç–æ–Ω. –ú–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞ —Å–æ—Ç–Ω–∏ –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤.",
    "–ö–æ—Ä–∞–ª–ª—ã": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Scleractinia - –º–æ—Ä—Å–∫–∏–µ –ø–æ–ª–∏–ø—ã, —Å—Ç—Ä–æ—è—Ç —Ä–∏—Ñ–æ–≤—ã–µ —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –±–∏–æ—Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –æ–∫–µ–∞–Ω–æ–≤.",
    "–ú–∞–Ω—Ç–∞": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Manta birostris - –≥–∏–≥–∞–Ω—Ç—Å–∫–∞—è –º–æ—Ä—Å–∫–∞—è —Ä—ã–±–∞. –ü–ª–∞–≤–∞–µ—Ç –≥—Ä–∞—Ü–∏–æ–∑–Ω–æ, —Ñ–∏–ª—å—Ç—Ä—É—è –º–µ–ª–∫–∏–π –ø–ª–∞–Ω–∫—Ç–æ–Ω. –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø–æ –æ–∫–µ–∞–Ω–∞–º.",
    "–û—Ä—ë–ª": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Aquila chrysaetos - –∫—Ä—É–ø–Ω–∞—è —Ö–∏—â–Ω–∞—è –ø—Ç–∏—Ü–∞. –û–±–∏—Ç–∞–µ—Ç –≤ –≥–æ—Ä–∞—Ö –∏ –ª–µ—Å–∞—Ö, –æ—Ö–æ—Ç–∏—Ç—Å—è –Ω–∞ –º–µ–ª–∫–∏—Ö –∏ —Å—Ä–µ–¥–Ω–∏—Ö –º–ª–µ–∫–æ–ø–∏—Ç–∞—é—â–∏—Ö, –æ–±–ª–∞–¥–∞–µ—Ç –æ—Å—Ç—Ä—ã–º –∑—Ä–µ–Ω–∏–µ–º –∏ —Å–∏–ª—å–Ω—ã–º–∏ –∫–æ–≥—Ç—è–º–∏.",
    "–§–ª–∞–º–∏–Ω–≥–æ": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Phoenicopterus roseus - –∫—Ä—É–ø–Ω–∞—è –≤–æ–¥–æ–ø–ª–∞–≤–∞—é—â–∞—è –ø—Ç–∏—Ü–∞ —Å —Ä–æ–∑–æ–≤—ã–º –æ–ø–µ—Ä–µ–Ω–∏–µ–º. –ü–∏—Ç–∞–µ—Ç—Å—è –∫—Ä–µ–≤–µ—Ç–∫–∞–º–∏ –∏ –≤–æ–¥–æ—Ä–æ—Å–ª—è–º–∏, —Ñ–∏–ª—å—Ç—Ä—É—è –≤–æ–¥—É —Å –ø–æ–º–æ—â—å—é –∫–ª—é–≤–∞.",
    "–ü–æ–ø—É–≥–∞–π": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Psittacidae - —è—Ä–∫–∞—è —Ç—Ä–æ–ø–∏—á–µ—Å–∫–∞—è –ø—Ç–∏—Ü–∞, —É–º–Ω–∞—è –∏ –æ–±—â–∏—Ç–µ–ª—å–Ω–∞—è. –ü–∏—Ç–∞–µ—Ç—Å—è —Ñ—Ä—É–∫—Ç–∞–º–∏, —Å–µ–º–µ–Ω–∞–º–∏ –∏ –æ—Ä–µ—Ö–∞–º–∏, —Å–ø–æ—Å–æ–±–Ω–∞ –∏–º–∏—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–≤—É–∫–∏.",
    "–°–æ–≤–∞": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Strigiformes - –Ω–æ—á–Ω–∞—è —Ö–∏—â–Ω–∞—è –ø—Ç–∏—Ü–∞. –û—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Å—Ç—Ä—ã–º —Å–ª—É—Ö–æ–º –∏ –∑—Ä–µ–Ω–∏–µ–º, –æ—Ö–æ—Ç–∏—Ç—Å—è –Ω–∞ –≥—Ä—ã–∑—É–Ω–æ–≤ –∏ –º–µ–ª–∫–∏—Ö –ø—Ç–∏—Ü.",
    "–ö–∞–ª–∏–±—Ä–∏": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Trochilidae - –º–∞–ª–µ–Ω—å–∫–∞—è –ø—Ç–∏—Ü–∞, –∑–∞–≤–∏—Å–∞—é—â–∞—è –≤ –≤–æ–∑–¥—É—Ö–µ. –ü–∏—Ç–∞–µ—Ç—Å—è –Ω–µ–∫—Ç–∞—Ä–æ–º —Ü–≤–µ—Ç–æ–≤, –∞–∫—Ç–∏–≤–Ω–æ —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ –æ–ø—ã–ª–µ–Ω–∏–∏.",
    "–ê–∏—Å—Ç": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Ciconia ciconia - –∫—Ä—É–ø–Ω–∞—è –ø–µ—Ä–µ–ª—ë—Ç–Ω–∞—è –ø—Ç–∏—Ü–∞. –ü–∏—Ç–∞–µ—Ç—Å—è —Ä—ã–±–æ–π, –ª—è–≥—É—à–∫–∞–º–∏ –∏ –Ω–∞—Å–µ–∫–æ–º—ã–º–∏, —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä—É–µ—Ç —Ä–æ–∂–¥–µ–Ω–∏–µ –∏ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏–µ.",
    "–ß–∞–π–∫–∞": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Larus argentatus - –º–æ—Ä—Å–∫–∞—è –ø—Ç–∏—Ü–∞, —Ö–æ—Ä–æ—à–æ –ø—Ä–∏—Å–ø–æ—Å–æ–±–ª–µ–Ω–∞ –∫ –ø—Ä–∏–±—Ä–µ–∂–Ω–æ–π —Å—Ä–µ–¥–µ. –ü–∏—Ç–∞–µ—Ç—Å—è —Ä—ã–±–æ–π, –ø–∞–¥–∞–ª—å—é –∏ –ø–∏—â–µ–≤—ã–º–∏ –æ—Ç—Ö–æ–¥–∞–º–∏.",
    "–ü–∞–≤–ª–∏–Ω": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Pavo cristatus - —Å–∞–º–µ—Ü –∏–∑–≤–µ—Å—Ç–µ–Ω —Å–≤–æ–∏–º –¥–ª–∏–Ω–Ω—ã–º –∫—Ä–∞—Å–æ—á–Ω—ã–º —Ö–≤–æ—Å—Ç–æ–º. –ü–∏—Ç–∞–µ—Ç—Å—è –Ω–∞—Å–µ–∫–æ–º—ã–º–∏, –∑–µ—Ä–Ω–æ–º –∏ –º–µ–ª–∫–∏–º–∏ —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏.",
    "–õ–∞—Å—Ç–æ—á–∫–∞": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Hirundinidae - –Ω–µ–±–æ–ª—å—à–∞—è –ø–µ—Ä–µ–ª—ë—Ç–Ω–∞—è –ø—Ç–∏—Ü–∞, –ø–∏—Ç–∞–µ—Ç—Å—è –Ω–∞—Å–µ–∫–æ–º—ã–º–∏ –≤ –ø–æ–ª—ë—Ç–µ. –°—Ç—Ä–æ–∏—Ç –≥–Ω—ë–∑–¥–∞ –∏–∑ –≥–ª–∏–Ω—ã –∏ —Ç—Ä–∞–≤—ã.",
    "–ü–∏–Ω–≥–≤–∏–Ω": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Aptenodytes forsteri - –Ω–µ–ª–µ—Ç–∞—é—â–∞—è –ø—Ç–∏—Ü–∞, –ø—Ä–∏—Å–ø–æ—Å–æ–±–ª–µ–Ω–Ω–∞—è –∫ –∂–∏–∑–Ω–∏ –≤ —Ö–æ–ª–æ–¥–Ω—ã—Ö –≤–æ–¥–∞—Ö. –ü–∏—Ç–∞–µ—Ç—Å—è —Ä—ã–±–æ–π –∏ –∫—Ä–∏–ª–µ–º, –æ—Ç–ª–∏—á–Ω–æ –ø–ª–∞–≤–∞–µ—Ç.",
    "–ö–æ–±—Ä–∞": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Naja spp. - —è–¥–æ–≤–∏—Ç–∞—è –∑–º–µ—è, –æ–±–∏—Ç–∞—é—â–∞—è –≤ –ê–∑–∏–∏ –∏ –ê—Ñ—Ä–∏–∫–µ. –ü–∏—Ç–∞–µ—Ç—Å—è –º–µ–ª–∫–∏–º–∏ –º–ª–µ–∫–æ–ø–∏—Ç–∞—é—â–∏–º–∏, —è—â–µ—Ä–∏—Ü–∞–º–∏ –∏ –ø—Ç–∏—Ü–∞–º–∏.",
    "–ò–≥—É–∞–Ω–∞": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Iguana iguana - –∫—Ä—É–ø–Ω–∞—è —è—â–µ—Ä–∏—Ü–∞, –≤–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω–µ—Ü. –ü–∏—Ç–∞–µ—Ç—Å—è –ª–∏—Å—Ç—å—è–º–∏, —Ñ—Ä—É–∫—Ç–∞–º–∏ –∏ —Ü–≤–µ—Ç–∞–º–∏, –≤–µ–¥—ë—Ç –¥–Ω–µ–≤–Ω–æ–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏.",
    "–•–∞–º–µ–ª–µ–æ–Ω": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Chamaeleonidae - —è—â–µ—Ä–∏—Ü–∞ —Å —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å—é –º–µ–Ω—è—Ç—å –æ–∫—Ä–∞—Å–∫—É. –ü–∏—Ç–∞–µ—Ç—Å—è –Ω–∞—Å–µ–∫–æ–º—ã–º–∏, –æ–±–ª–∞–¥–∞–µ—Ç –¥–ª–∏–Ω–Ω—ã–º –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–º —è–∑—ã–∫–æ–º.",
    "–ì–µ–∫–∫–æ–Ω": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Gekkonidae - –Ω–µ–±–æ–ª—å—à–∞—è –Ω–æ—á–Ω–∞—è —è—â–µ—Ä–∏—Ü–∞. –ü–∏—Ç–∞–µ—Ç—Å—è –Ω–∞—Å–µ–∫–æ–º—ã–º–∏, —Å–ø–æ—Å–æ–±–µ–Ω –∫ –ª–∞–∑–∞–Ω–∏—é –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–º –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—è–º.",
    "–í–∞—Ä–∞–Ω": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Varanus - –∫—Ä—É–ø–Ω–∞—è —è—â–µ—Ä–∏—Ü–∞, –∞–∫—Ç–∏–≤–Ω—ã–π —Ö–∏—â–Ω–∏–∫. –ü–∏—Ç–∞–µ—Ç—Å—è —Ä—ã–±–æ–π, –º–µ–ª–∫–∏–º–∏ –º–ª–µ–∫–æ–ø–∏—Ç–∞—é—â–∏–º–∏ –∏ –ø—Ç–∏—Ü–∞–º–∏, –æ–±–∏—Ç–∞–µ—Ç –≤ —Ç—Ä–æ–ø–∏—á–µ—Å–∫–∏—Ö –∏ –ø—É—Å—Ç—ã–Ω–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–∞—Ö.",
    "–ö—Ä–æ–∫–æ–¥–∏–ª": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Crocodylus - –∫—Ä—É–ø–Ω—ã–π –ø—Ä–µ—Å–º—ã–∫–∞—é—â–∏–π—Å—è —Ö–∏—â–Ω–∏–∫. –ñ–∏–≤—ë—Ç –≤ –ø—Ä–µ—Å–Ω—ã—Ö –≤–æ–¥–æ—ë–º–∞—Ö, –æ—Ö–æ—Ç–∏—Ç—Å—è –Ω–∞ —Ä—ã–±—É, –ø—Ç–∏—Ü –∏ –º–ª–µ–∫–æ–ø–∏—Ç–∞—é—â–∏—Ö.",
    "–ü—É—Å—Ç—ã–Ω–Ω–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Testudo kleinmanni - –º–∞–ª–µ–Ω—å–∫–∞—è —Å—É—Ö–æ–ø—É—Ç–Ω–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞ –ø—É—Å—Ç—ã–Ω–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤. –ü–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫—Ç—É—Å–∞–º–∏ –∏ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é, –ø—Ä–∏—Å–ø–æ—Å–æ–±–ª–µ–Ω–∞ –∫ –∑–∞—Å—É—à–ª–∏–≤—ã–º —É—Å–ª–æ–≤–∏—è–º.",
    "–°–∫–æ—Ä–ø–∏–æ–Ω": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Scorpiones - —á–ª–µ–Ω–∏—Å—Ç–æ–Ω–æ–≥–æ–µ, —Ö–∏—â–Ω–∏–∫ –ø—É—Å—Ç—ã–Ω—å. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —è–¥–æ–≤–∏—Ç—ã–µ –∂–∞–ª–∞ –¥–ª—è –æ—Ö–æ—Ç—ã –Ω–∞ –Ω–∞—Å–µ–∫–æ–º—ã—Ö –∏ –º–µ–ª–∫–∏—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö.",
    "–í–µ—Ä–±–ª—é–¥": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Camelus dromedarius - –∫—Ä—É–ø–Ω–æ–µ —Ç—Ä–∞–≤–æ—è–¥–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ –ø—É—Å—Ç—ã–Ω—å. –ü—Ä–∏—Å–ø–æ—Å–æ–±–ª–µ–Ω –∫ –¥–æ–ª–≥–∏–º –ø–µ—Ä–µ—Ö–æ–¥–∞–º –±–µ–∑ –≤–æ–¥—ã, –∑–∞–ø–∞—Å–∞–µ—Ç –∂–∏—Ä –≤ –≥–æ—Ä–±–µ.",
    "–§–µ–Ω–µ–∫": "–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: Vulpes zerda - –º–µ–ª–∫–∏–π –ø—É—Å—Ç—ã–Ω–Ω—ã–π —Ö–∏—â–Ω–∏–∫ —Å –±–æ–ª—å—à–∏–º–∏ —É—à–∞–º–∏. –ê–∫—Ç–∏–≤–µ–Ω –Ω–æ—á—å—é, –ø–∏—Ç–∞–µ—Ç—Å—è –Ω–∞—Å–µ–∫–æ–º—ã–º–∏ –∏ –º–µ–ª–∫–∏–º–∏ –∂–∏–≤–æ—Ç–Ω—ã–º–∏."

   
  };
 

   // –ö–ª–∏–∫ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ
  document.querySelectorAll('.animal-card').forEach(card => {
    card.addEventListener('click', () => {
      const title = card.querySelector('h3').innerText;
      const imgSrc = card.querySelector('img').src;
      const desc = animalDetails[title] || card.querySelector('p').innerText;

      modalTitle.textContent = title;
      modalImage.src = imgSrc;
      modalImage.alt = title;
      modalDesc.textContent = desc;

      modal.style.display = 'flex';
    });
  });

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∫–∏
  closeBtn.addEventListener('click', () => modal.style.display = 'none');
  window.addEventListener('click', e => { if(e.target === modal) modal.style.display = 'none'; });
});

function displayAnimals(list, containerId) {
  const container = document.getElementById(containerId);
  container.innerHTML = '';
  
  list.forEach(animal => {
    const card = document.createElement('div');
    card.className = 'animal-card';
    card.innerHTML = `
      <img src="${animal.img}" alt="${animal.name}">
      <h3>${animal.name}</h3>
      <p>${animal.description}</p>
    `;
    container.appendChild(card);

    // –ö–ª–∏–∫ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ –¥–ª—è –º–æ–¥–∞–ª–∫–∏
    card.addEventListener('click', () => {
      modalTitle.textContent = animal.name;
      modalImage.src = animal.img;
      modalImage.alt = animal.name;
      modalDesc.textContent = animalDetails[animal.name] || animal.description;
      modal.style.display = 'flex';
    });
  });

  // –î–æ–±–∞–≤–ª—è–µ–º IntersectionObserver –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ –ø–æ—è–≤–ª–µ–Ω–∏—è
  document.querySelectorAll(`#${containerId} .animal-card`).forEach(card => observer.observe(card));
}
const biomeSelect = document.getElementById('biome-select');

biomeSelect.addEventListener('change', () => {
  const biome = biomeSelect.value;
  if (biome === 'all') {
    displayAnimals(animalsData, 'forest'); // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
  } else {
    const filtered = animalsData.filter(a => a.biome === biome);
    displayAnimals(filtered, 'forest'); // –ú–µ–Ω—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–æ –Ω—É–∂–Ω–æ–π —Å–µ–∫—Ü–∏–∏
  }
});






// –∂–¥—ë–º –∑–∞–≥—Ä—É–∑–∫–∏ DOM, —á—Ç–æ–±—ã –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –±—ã–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã
document.addEventListener('DOMContentLoaded', () => {

  // ---------- —ç–ª–µ–º–µ–Ω—Ç—ã UI ----------
  const container = document.getElementById('animal-container');
  const selectBiome = document.getElementById('biome-select');
  const searchInput = document.getElementById('search-input');

  // –º–æ–¥–∞–ª–∫–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–≤–æ–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã)
  const modal = document.getElementById('modal');
  const modalTitle = document.getElementById('modal-title');
  const modalImage = document.getElementById('modal-image');
  const modalDesc = document.getElementById('modal-description');
  const closeBtn = modal ? modal.querySelector('.close') : null;

  let animalsData = []; // —Å—é–¥–∞ –∑–∞–≥—Ä—É–∑–∏–º JSON

  // ---------- –∑–∞–≥—Ä—É–∑–∫–∞ JSON ----------
  fetch('animals.json')
    .then(res => {
      if (!res.ok) throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å animals.json ‚Äî –ø—Ä–æ–≤–µ—Ä—å –ø—É—Ç—å –∏ –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞');
      return res.json();
    })
    .then(data => {
      animalsData = data;
      renderAnimals(animalsData);
    })
    .catch(err => {
      console.error(err);
      container.innerHTML = `<p style="color: #fff">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: ${err.message}</p>`;
    });

  // ---------- —Ä–µ–Ω–¥–µ—Ä –∫–∞—Ä—Ç–æ—á–µ–∫ ----------
  function renderAnimals(list) {
    container.innerHTML = ''; // –æ—á–∏—Å—Ç–∫–∞
    if (!list.length) {
      container.innerHTML = `<p style="color:#ddd">–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.</p>`;
      return;
    }

    list.forEach(animal => {
      const card = document.createElement('div');
      card.className = 'animal-card';
      card.innerHTML = `
        <img src="${animal.img}" alt="${escapeHtml(animal.name)}">
        <h3>${escapeHtml(animal.name)}</h3>
        <p>${escapeHtml(animal.description)}</p>
      `;

      // –∫–ª–∏–∫ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª–∫—É —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ–π (–æ—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç—É—é, –º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å)
      card.addEventListener('click', () => {
        if (!modal) return;
        modalTitle.textContent = animal.name;
        modalImage.src = animal.img;
        modalImage.alt = animal.name;
        modalDesc.textContent = animal.description;
        modal.style.display = 'flex';
      });

      container.appendChild(card);
    });
  }

  // ---------- —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è + –ø–æ–∏—Å–∫ (–æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ) ----------
  function applyFilters() {
    const biome = (selectBiome?.value || 'all').toLowerCase();
    const q = (searchInput?.value || '').trim().toLowerCase();

    let filtered = animalsData;

    if (biome !== 'all') {
      filtered = filtered.filter(a => (a.biome || '').toLowerCase() === biome);
    }
    if (q.length) {
      filtered = filtered.filter(a => (a.name || '').toLowerCase().includes(q));
    }

    renderAnimals(filtered);
  }

  // —Å–ª—É—à–∞—Ç–µ–ª–∏
  if (selectBiome) selectBiome.addEventListener('change', applyFilters);
  if (searchInput) {
    // –ø—Ä–æ—Å—Ç–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è ‚Äî debounce, —á—Ç–æ–±—ã –ø–æ–∏—Å–∫ –Ω–µ –≤—ã–∑—ã–≤–∞–ª—Å—è —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ –ø—Ä–∏ –≤–≤–æ–¥–µ
    let timer = null;
    searchInput.addEventListener('input', () => {
      clearTimeout(timer);
      timer = setTimeout(applyFilters, 150);
    });
  }

  // –º–æ–¥–∞–ª–∫–∞ ‚Äî –∑–∞–∫—Ä—ã—Ç–∏–µ
  if (closeBtn) closeBtn.addEventListener('click', () => modal.style.display = 'none');
  window.addEventListener('click', e => { if (e.target === modal) modal.style.display = 'none'; });

  // –∑–∞—â–∏—Ç–∞ –æ—Ç XSS (–æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–∞—è)
  function escapeHtml(str) {
    if (!str) return '';
    return String(str)
      .replace(/&/g, '&amp;')
      .replace(/</g, '&lt;')
      .replace(/>/g, '&gt;')
      .replace(/"/g, '&quot;')
      .replace(/'/g, '&#039;');
  }

});
